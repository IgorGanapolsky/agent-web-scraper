name: 🔄 Sync Kanban Board with Issues

on:
  schedule:
    - cron: '0 10 * * *'  # Daily at 10 AM UTC (5 AM EST)
  workflow_dispatch:
  issues:
    types: [opened, labeled, unlabeled, closed, reopened]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  sync-kanban:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-dotenv requests
          if [ -f requirements-scripts.txt ]; then pip install -r requirements-scripts.txt; fi

      - name: 🧪 Test GitHub API Access
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔍 Testing GitHub API access..."
          python -c "
          import requests
          import os

          token = os.getenv('GITHUB_TOKEN')
          headers = {'Authorization': f'token {token}', 'Accept': 'application/vnd.github+json'}

          # Test basic API access
          resp = requests.get('https://api.github.com/user', headers=headers)
          print(f'API Access: {resp.status_code}')

          # Test repository access
          resp = requests.get('https://api.github.com/repos/${{ github.repository }}', headers=headers)
          print(f'Repo Access: {resp.status_code}')

          # Test issues access
          resp = requests.get('https://api.github.com/repos/${{ github.repository }}/issues', headers=headers)
          print(f'Issues Access: {resp.status_code}')
          "

      - name: 🎯 Sync Issues to Kanban Board
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🚀 Starting Kanban board synchronization..."
          python scripts/populate_github_kanban.py
        continue-on-error: true

      - name: 🤖 Auto-Organize Kanban by Priority
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🎯 Auto-organizing issues by priority labels..."
          python scripts/auto_organize_kanban.py
        continue-on-error: true

      - name: 📊 Generate Status Report
        run: |
          echo "📈 Kanban Sync Workflow Status Report" > kanban_status.md
          echo "Generated: $(date)" >> kanban_status.md
          echo "" >> kanban_status.md
          echo "## Issues Created/Updated" >> kanban_status.md

          # Count open issues
          OPEN_ISSUES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues?state=open" | \
            jq '. | length')

          echo "- Open Issues: ${OPEN_ISSUES}" >> kanban_status.md
          echo "- Workflow Run: ${{ github.run_number }}" >> kanban_status.md
          echo "- Repository: ${{ github.repository }}" >> kanban_status.md

          echo "" >> kanban_status.md
          echo "## Recent Issues (Last 5)" >> kanban_status.md

          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues?state=open&per_page=5" | \
            jq -r '.[] | "- #\(.number): \(.title)"' >> kanban_status.md

          echo "" >> kanban_status.md
          echo "✅ Kanban synchronization completed successfully!" >> kanban_status.md

          cat kanban_status.md

      - name: 📄 Upload Status Report
        uses: actions/upload-artifact@v3
        with:
          name: kanban-sync-status
          path: kanban_status.md

      - name: 🎉 Completion Summary
        run: |
          echo "🎯 GitHub Project Kanban Board Sync Complete!"
          echo "📊 Check the Actions artifacts for detailed status report"
          echo "🔍 View your project board: https://github.com/${{ github.repository }}/projects"
          echo "📈 Issues URL: https://github.com/${{ github.repository }}/issues"
